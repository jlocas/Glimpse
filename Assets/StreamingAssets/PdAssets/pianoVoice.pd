#N canvas 220 151 671 635 10;
#X obj 59 -335 inlet noteVel;
#N canvas 685 58 661 831 readArray 1;
#X obj 97 170 int;
#X obj 69 407 line~;
#N canvas 165 79 1597 763 getTranspo 0;
#X text 59 -614 détecte la note chargée en ram la plus proche pour
déterminer le ratio de transpo.;
#X obj 415 -621 inlet note;
#X obj 415 -599 t f b;
#X obj 415 -577 f;
#X obj 415 -555 t f b;
#X obj 442 -528 scounter;
#X obj 415 -280 +;
#X obj 442 -506 sel 0 1 2;
#X msg 442 -424 0 1;
#X msg 459 -445 1 1.05946;
#X msg 476 -465 -1 0.943874;
#X obj 442 -395 unpack f f;
#X obj 415 -182 sel 0 1;
#X obj 354 -154 b;
#X obj 415 -258 t f f;
#X obj 434 -123 t b b;
#X obj 461 -56 outlet transpo;
#X obj 434 -35 outlet note;
#X obj 415 -204 tabread \$1-loadedNotes;
#X obj 434 -97 f;
#X obj 461 -97 f 1;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 5 1;
#X connect 3 0 4 0;
#X connect 4 0 6 0;
#X connect 4 1 5 0;
#X connect 5 0 7 0;
#X connect 6 0 14 0;
#X connect 7 0 8 0;
#X connect 7 1 9 0;
#X connect 7 2 10 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 11 0 6 1;
#X connect 11 1 20 1;
#X connect 12 0 13 0;
#X connect 12 1 15 0;
#X connect 13 0 3 0;
#X connect 14 0 18 0;
#X connect 14 1 19 1;
#X connect 15 0 19 0;
#X connect 15 1 20 0;
#X connect 18 0 12 0;
#X connect 19 0 17 0;
#X connect 20 0 16 0;
#X restore 69 -83 pd getTranspo;
#X obj 69 363 pack f f f;
#X obj 97 192 t f b;
#X msg 69 385 \$1 \, \$2 \$3;
#X obj 69 435 tabread4~ \$1-notes;
#X obj 68 883 outlet~;
#X obj 69 -340 inlet noteVel;
#X obj 69 -288 unpack f f;
#X obj 69 -236 stripnote;
#N canvas 872 194 790 666 startStopMarkers 0;
#X obj 169 352 +;
#X text 196 351 jusqu'ou lire \, fin de la note;
#X obj 142 289 t f f;
#X text 172 260 détermine le point de départ dans l'array selon la
note (index * duree de chaque note);
#X obj 142 -36 / 3;
#X obj 142 -6 - 12;
#X text 176 -26 determine l'index de la note à lire et a transposer(note
/ 3 (parce quon a 1 note sur 3) - 12 (36 / 3 \, 36 étant la premiere
note)) \, la note 36 donnera donc l'index 0;
#X obj 142 464 outlet startMarker;
#X obj 169 444 outlet stopMarker;
#X obj 157 147 inlet size;
#X obj 142 -120 inlet note;
#X obj 157 176 t f f;
#X obj 142 267 *;
#X connect 0 0 8 0;
#X connect 2 0 7 0;
#X connect 2 1 0 0;
#X connect 4 0 5 0;
#X connect 5 0 12 0;
#X connect 9 0 11 0;
#X connect 10 0 4 0;
#X connect 11 0 12 1;
#X connect 11 1 0 1;
#X connect 12 0 2 0;
#X restore 69 -54 pd startStopMarkers;
#N canvas 140 403 450 427 transpo 0;
#X obj 164 299 * 1000;
#X obj 179 164 loadbang;
#X obj 179 242 /;
#X obj 179 186 t b b;
#X msg 179 213 1;
#X obj 164 277 *;
#X text 190 276 divise par le samplerate;
#X text 187 340 transpo;
#X obj 164 341 *;
#X obj 164 117 f;
#X text 193 115 size de l'échantillon de l'array a lire;
#X obj 164 66 inlet bang;
#X obj 316 67 inlet size;
#X obj 164 363 outlet transpo;
#X obj 231 66 inlet transpo;
#X msg 206 213 44100;
#X connect 0 0 8 0;
#X connect 1 0 3 0;
#X connect 2 0 5 1;
#X connect 3 0 4 0;
#X connect 3 1 15 0;
#X connect 4 0 2 0;
#X connect 5 0 0 0;
#X connect 8 0 13 0;
#X connect 9 0 5 0;
#X connect 11 0 9 0;
#X connect 12 0 9 1;
#X connect 14 0 8 1;
#X connect 15 0 2 1;
#X restore 126 220 pd transpo;
#X text 196 221 in: bang \, transpo and size;
#X text 193 -55 out: start \, stop and size;
#X text 155 -209 out: note and transpo;
#X obj 369 -260 * 6;
#X obj 369 -347 loadbang;
#X text 395 -238 durée en samples;
#X obj 369 -238 f;
#X text 395 -260 6s = durée en secondes de chaque note;
#X obj 369 -214 s \$0-1NoteSize;
#X obj 180 -79 r \$0-1NoteSize;
#N canvas 858 190 727 556 velOffset 0;
#X obj 79 286 +;
#X obj 94 76 * 0.00787402;
#X obj 94 98 * -1;
#X obj 94 120 + 1;
#X text 174 68 on offset selon la vélocité pour éliminer graduellement
l'attaque du marteau pour les vélocité plus basse;
#X obj 113 338 -;
#X obj 113 291 f;
#X obj 94 224 t f b f;
#X obj 113 313 f;
#X text 138 332 soustrait l'offset au size d'une note \, pour que la
transpo reste précise;
#X obj 128 256 r \$0-1NoteSize;
#X obj 94 39 inlet vel;
#X obj 79 14 inlet startMarker;
#X obj 113 379 outlet newSize;
#X obj 79 405 outlet newStart;
#X obj 94 164 int;
#X obj 94 142 * 8000;
#X connect 0 0 14 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 16 0;
#X connect 5 0 13 0;
#X connect 6 0 8 0;
#X connect 7 0 0 1;
#X connect 7 1 6 0;
#X connect 7 2 5 1;
#X connect 8 0 5 0;
#X connect 10 0 6 1;
#X connect 11 0 1 0;
#X connect 12 0 0 0;
#X connect 15 0 7 0;
#X connect 16 0 15 0;
#X restore 69 138 pd velOffset;
#X obj 149 -264 unpack f f;
#X obj 149 -242 stripnote;
#X obj 69 302 t f b;
#X obj 69 -318 t l l;
#X obj 83 522 loadbang;
#X text 127 578 évite les clic lorsqu'une voix est écrasée;
#X msg 120 555 1 1;
#X obj 83 577 line~;
#X obj 68 602 *~;
#X msg 83 555 0 5;
#X obj 200 81 f;
#X msg 323 -311 44100;
#X connect 0 0 4 0;
#X connect 1 0 6 0;
#X connect 2 0 11 0;
#X connect 2 1 12 1;
#X connect 3 0 5 0;
#X connect 4 0 3 1;
#X connect 4 1 12 0;
#X connect 5 0 1 0;
#X connect 6 0 32 0;
#X connect 8 0 27 0;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 2 0;
#X connect 11 0 23 0;
#X connect 11 1 0 0;
#X connect 12 0 3 2;
#X connect 16 0 19 0;
#X connect 17 0 35 0;
#X connect 19 0 21 0;
#X connect 22 0 11 1;
#X connect 23 0 26 0;
#X connect 23 1 12 2;
#X connect 24 0 25 0;
#X connect 24 1 25 1;
#X connect 25 0 33 0;
#X connect 25 1 34 0;
#X connect 26 0 3 0;
#X connect 26 1 30 0;
#X connect 27 0 9 0;
#X connect 27 1 24 0;
#X connect 28 0 33 0;
#X connect 30 0 31 0;
#X connect 31 0 32 1;
#X connect 32 0 7 0;
#X connect 33 0 31 0;
#X connect 34 0 23 1;
#X connect 35 0 16 0;
#X restore 59 -229 pd readArray;
#X text 143 -235 traitement de la region de l'array a lire et de la
transpo selon la note entree;
#X obj 97 210 > 0;
#X obj 97 232 sel 1;
#X obj 97 264 f;
#X obj 139 231 * 0.00787402;
#X text 219 231 / 127;
#X obj 97 180 t f f;
#X text 139 178 multiplication du niveau selon la vélocité;
#X obj 59 473 fcpan;
#X obj 86 423 r \$0-notePan;
#X obj 86 447 * 0.00787402;
#X obj 58 555 throw~ \$1-voicesOut-L;
#X obj 87 535 throw~ \$1-voicesOut-R;
#X obj 59 -296 t l l;
#N canvas 837 177 863 762 ADSR 0;
#X obj 98 8 inlet noteVel;
#X obj 98 219 stripnote;
#X obj 98 567 pack f f f f;
#X obj 121 446 r \$1-attack;
#X obj 144 489 r \$1-decay;
#X obj 167 509 r \$1-sustain;
#X obj 268 222 r \$1-release;
#X obj 253 199 sel 0;
#X obj 253 251 f;
#X msg 253 273 0 \$1;
#X msg 98 589 0 \, 1 \$2 \, \$4 \$3 \$2;
#X obj 98 621 vline~;
#X obj 83 686 *~;
#X text 164 217 enveloppe ADSR;
#X obj 98 36 unpack f f;
#X obj 98 65 t f f;
#X obj 125 87 s \$0-notePan;
#X obj 82 -19 inlet~ arraySig;
#X obj 83 708 outlet~ signal;
#X obj 300 154 outlet vel;
#X obj 121 468 + 1;
#X text 292 198 velocité de 0 déclanche le release;
#X obj 273 131 sel 0;
#X obj 234 106 t f f f;
#X connect 0 0 14 0;
#X connect 1 0 2 0;
#X connect 2 0 10 0;
#X connect 3 0 20 0;
#X connect 4 0 2 2;
#X connect 5 0 2 3;
#X connect 6 0 8 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 11 0 12 1;
#X connect 12 0 18 0;
#X connect 14 0 15 0;
#X connect 14 1 23 0;
#X connect 15 0 1 0;
#X connect 15 1 16 0;
#X connect 17 0 12 0;
#X connect 20 0 2 1;
#X connect 22 1 19 0;
#X connect 23 0 1 1;
#X connect 23 1 7 0;
#X connect 23 2 22 0;
#X restore 58 -187 pd ADSR;
#X obj 59 301 *~ 0;
#X connect 0 0 15 0;
#X connect 1 0 16 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 17 1;
#X connect 6 0 5 1;
#X connect 8 0 3 0;
#X connect 8 1 6 0;
#X connect 10 0 13 0;
#X connect 10 1 14 0;
#X connect 11 0 12 0;
#X connect 12 0 10 1;
#X connect 15 0 1 0;
#X connect 15 1 16 1;
#X connect 16 0 17 0;
#X connect 16 1 8 0;
#X connect 17 0 10 0;
